{"version":3,"sources":["components/pokemons/Search.jsx","components/pokemons/Pagination.jsx","components/pokemons/PokemonList.jsx","main.js","store/pokemons.js","App.js","index.js"],"names":["Search","inject","observer","changeType","ev","setType","_this","props","pokemons","currentTarget","value","onSearch","setHighlightPattern","_ref","_this$props$pokemons","this","types","category","highlightPattern","react_default","a","createElement","className","style","flex","flexWrap","flexDirection","onChange","defaultValue","width","map","el","key","url","name","type","placeholder","flexGrow","flexBasis","Object","defineProperty","Component","Pagination","changeOnPage","setItemsOnPage","parseInt","onNext","preventDefault","nextPage","onBack","previousPage","offset","itemsOnPage","showNext","htmlFor","aria-label","onClick","href","PokemonList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","init","pokemonsOnPage","pokemonsInfo","raws","forEach","console","log","val","assign","id","replace","split","pop","avatar","concat","isNotSelected","length","toLowerCase","startsWith","addedStyle","get","opacity","push","height","verticalAlign","minHeight","umd_default","src","pokemons_Pagination","maxWidth","borderCollapse","textAlign","Main","margin","pokemons_Search","pokemons_PokemonList","ApiRoot","previous","next","getTypes","that","fetch","then","r","status","json","results","catch","error","getPockemons","_callee","q","query","_args","arguments","regenerator_default","wrap","_context","prev","undefined","busy","abrupt","pokemon","count","e","stop","slice","observable","ObservableMap","computed","action","cat","_this2","populated","Promise","all","_this3","_callee2","_context2","_this4","t0","result","_this5","itemsNum","_this6","pattern","_this7","_callee3","_context3","_this8","infoOpenedForId","has","t1","getInfo","t2","sent","set","t3","App","index_module","main","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a73e1c23.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n\r\n\r\n@inject('pokemons')\r\n@observer\r\n class Search extends Component {\r\n    changeType = (ev) => {\r\n    \tconst {  setType } = this.props.pokemons;\r\n    \tsetType( ev.currentTarget.value ) \r\n    }\r\n\r\n   \tonSearch = (ev) => {\r\n    \tconst {  setHighlightPattern } = this.props.pokemons;\r\n    \tsetHighlightPattern( ev.currentTarget.value ) \r\n    }\r\n\r\n    render() {\r\n    \tconst { types, category, highlightPattern } = this.props.pokemons;\r\n        return (\r\n             <div className=\"input-group\" style={{ flex: 1,  flexWrap: 'wrap', flexDirection: 'row' }}>\r\n\t\t\t      <select className=\"form-control\" onChange={this.changeType} defaultValue={category} style={ { flex: 1, width: 'auto'} }>\r\n\t\t\t\t\t  <option value=\"\">All</option>\r\n\t\t\t\t\t  { types.map( el => (\r\n\t\t\t\t\t  \t\t<option key={el.url} value={el.url} >{el.name}</option>\r\n\t\t\t\t\t  \t) )\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t  </select>\t\t\t\r\n\t\t\t\t  <input  type=\"text\" className=\"form-control\" placeholder=\"type a name to highlight pokemons\" onChange={this.onSearch} value={highlightPattern} style={ { flexGrow: 1, flexBasis: 'fill', flex: 1, flex: 1, width: 'auto' ,marginLeft: '10px'} } />\r\n\t\t\t      <span style={ { flex: 1} } >\r\n\t\t\t      </span>\r\n\t\t    </div>\r\n        );\r\n    }\r\n}\r\nexport default Search\r\n\r\n","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n\r\n\r\n@inject('pokemons') @observer\r\nclass Pagination extends Component {\r\n\r\n    changeOnPage = (ev) => {\r\n      const {  setItemsOnPage } = this.props.pokemons;\r\n      setItemsOnPage( parseInt( ev.currentTarget.value ) ) \r\n    }\r\n\r\n    onNext = (ev) => {\r\n      ev.preventDefault()\r\n      const {  nextPage } = this.props.pokemons;\r\n      nextPage( ) \r\n    }\r\n\r\n    onBack = (ev) => {\r\n      ev.preventDefault()\r\n      const {  previousPage } = this.props.pokemons;\r\n      previousPage(  ) \r\n    }\r\n\r\n    render() {\r\n        const {offset,  itemsOnPage,  showNext } = this.props.pokemons;\r\n\r\n        return (\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"onpage\">On page:</label>\r\n                <select htmlFor=\"id\" className=\"form-control\" name=\"onpage\" value={itemsOnPage} onChange={this.changeOnPage}>\r\n                  <option value=\"10\" >10</option>\r\n                  <option value=\"20\" >20</option>\r\n                  <option value=\"50\" >50</option>\r\n                </select>\r\n              </div>\r\n             \t<nav aria-label=\"...\">\r\n                    <ul className=\"pager\">\r\n                      { offset > 0 && \r\n                        <li className=\"previous\" onClick={null}><a  onClick={this.onBack} href=\"#\">Previous</a></li>\r\n                      }\r\n                      { showNext &&\r\n                        <li className=\"next\" onClick={null} ><a  onClick={this.onNext} href=\"#\">Next</a></li>\r\n                      }\r\n                    </ul>\r\n              </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Pagination\r\n\r\n","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport MDSpinner from \"react-md-spinner\";\r\nimport Img from 'react-image'\r\nimport Pagination from './Pagination';\r\n\r\n\r\n@inject('pokemons') @observer\r\n class PokemonList extends Component {\r\n    constructor(props){\r\n        super(props)\r\n       \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.pokemons.init()\r\n    }\r\n\r\n\r\n    render() {\r\n        const {offset, pokemonsOnPage, highlightPattern, pokemonsInfo } = this.props.pokemons ;\r\n\r\n        const raws = [];\r\n        (pokemonsOnPage).forEach((el, key) => {\r\n            console.log(\"aaa\",el)\r\n            const val = Object.assign({}, el)\r\n            const id = parseInt( val.url.replace(/\\/$/, '').split('/').pop()  ) \r\n            val.id = id\r\n            val.avatar = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${ id }.png`\r\n\r\n            const isNotSelected = !highlightPattern.length ||  val.name.toLowerCase().startsWith(highlightPattern)\r\n            const detailedInfo = pokemonsInfo.get(id )\r\n\r\n            const addedStyle = {}\r\n            if(!isNotSelected){\r\n                addedStyle.opacity = 0.1\r\n            }\r\n           \r\n\r\n            raws.push( \r\n                <tr  key={val.name} style={ Object.assign( {height: '100px', verticalAlign: 'middle' }, addedStyle ) }>\r\n                    <td>\r\n                        {val.id}\r\n                    </td>\r\n                    <td style={{width:'100px', minHeight: '96px'}}>\r\n                        <Img src={val.avatar} style={{verticalAlign: 'middle', height: '96px'}}/>\r\n                    </td>\r\n                    <td>\r\n                     {val.name}\r\n                    </td>\r\n                    <td>\r\n                        {val.type}\r\n                    </td>\r\n                </tr>\r\n                )\r\n        }) \r\n        return (\r\n            <div style={{width:'100%'}}>\r\n                <Pagination/>\r\n                {raws.length > 0 \r\n\r\n                ?\r\n              \r\n                    <table style={{width:'100%', maxWidth:'560px', borderCollapse: 'collapse'}}>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>id</th>\r\n                            <th>Avatar</th>\r\n                            <th>Name</th>\r\n                            <th>Type</th>\r\n                        </tr>\r\n                          </thead>\r\n                         <tbody>\r\n                          { \r\n                            raws\r\n                          }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                :\r\n\r\n                    <h5 style={{textAlign:'center'}}>\r\n                        No pokemons to show\r\n                    </h5>\r\n                }\r\n                \r\n                <Pagination/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default  PokemonList","import {inject, observer} from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport Search from './components/pokemons/Search';\r\nimport PokemonList from './components/pokemons/PokemonList';\r\n\r\n@inject('pokemons')\r\nclass Main extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>All Pokemons</h1>\r\n                <section  className=\"main_container\">\r\n                    <div className=\"wrapper\" style={{maxWidth: '580px', margin: '0 auto'}}>\r\n                        <main className=\"main_content\">\r\n                            <Search/>\r\n                            <PokemonList/>\r\n                        </main>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Main\r\n","import { ObservableMap, observable, action, computed, autorun, toJS, useStrict, extendObservable } from 'mobx';\r\n//useStrict(true);\r\nconst ApiRoot = `http://pokeapi.co/api/v2`\r\n\r\n\r\nexport default class Pokemons {\r\n\r\n    @observable highlightPattern = ''\r\n\r\n    @observable count = 0\r\n    @observable busy = false\r\n    previous = null\r\n    next = `${ApiRoot}/pokemon/`\r\n\r\n    @observable offset = 0\r\n    @observable itemsOnPage = 20\r\n\r\n    @observable pokemons = []\r\n\r\n    @observable pokemonsInfo = new ObservableMap()\r\n\r\n    @computed get showNext() {\r\n        return this.offset + this.itemsOnPage < this.count\r\n    }\r\n\r\n    @computed get pokemonsOnPage() {\r\n        if (this.offset > this.count) return []\r\n        return this.pokemons.slice(this.offset, this.offset + this.itemsOnPage);\r\n        /*}*/\r\n    }\r\n\r\n    @observable types = []\r\n    @observable category = null\r\n    @observable itemsOnPage = 20\r\n    @observable infoOpenedForId = 0\r\n\r\n    @action init = (cat) => {\r\n        if (this.populated) return;\r\n\r\n        this.category = cat\r\n        this.offset = 0;\r\n        this.next = null;\r\n        this.pokemons = []\r\n        this.count = 0;\r\n        Promise.all([this.getTypes(), this.getPockemons()]).then(() => this.populated = true)\r\n    }\r\n\r\n    @action setType = (cat) => {\r\n        this.category = cat\r\n        this.offset = 0;\r\n        this.next = null;\r\n        this.pokemons = []\r\n        this.count = 0;\r\n        this.getPockemons()\r\n    }\r\n\r\n\r\n\r\n    @action nextPage = async() => {\r\n        if (this.pokemons.length <= this.offset + this.itemsOnPage && this.next) {\r\n\r\n            try {\r\n                await this.getPockemons(this.next)\r\n            } catch (err) {\r\n\r\n            }\r\n        }\r\n        if (this.offset + this.itemsOnPage >= this.count) this.offset = this.count\r\n        else this.offset = this.offset + this.itemsOnPage\r\n    }\r\n\r\n    @action previousPage = () => {\r\n        const result = this.offset - this.itemsOnPage\r\n        this.offset = result > 0 ? result : 0\r\n    }\r\n\r\n    @action setItemsOnPage = (itemsNum) => this.itemsOnPage = itemsNum\r\n\r\n    @action setHighlightPattern = (pattern) => {\r\n\r\n        //to server\r\n        this.highlightPattern = pattern.toLowerCase()\r\n            //select here\r\n    }\r\n\r\n\r\n\r\n\r\n    @action changePockemonInoState = async(val) => {\r\n        const that = this;\r\n        const id = parseInt(val);\r\n        if (that.infoOpenedForId === id) {\r\n            that.infoOpenedForId = null\r\n\r\n        } else {\r\n\r\n            that.infoOpenedForId = id\r\n            if (that.pokemonsInfo.has(id)) return\r\n            try {\r\n                that.pokemonsInfo.set(id, await that.getInfo(id))\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n    }\r\n\r\n    getTypes = () => {\r\n        const that = this;\r\n        return fetch(`${ApiRoot}/type/`) // Call the fetch function passing the url of the API as a parameter\r\n            .then(r => {\r\n                if (r.status !== 200) throw r;\r\n                return r;\r\n            })\r\n            .then(r => r.json())\r\n            .then(r => {\r\n                if (!r.results) return;\r\n                that.types = r.results\r\n            })\r\n            .catch(r => {\r\n                console.error(r);\r\n            });\r\n    }\r\n\r\n    getPockemons = async(url = `${ApiRoot}/pokemon/`, q = null) => {\r\n        this.busy = true\r\n\r\n        const query = q || {};\r\n        let promise = null;\r\n\r\n        return (this.category ? fetch(this.category) // Call the fetch function passing the url of the API as a parameter\r\n                \r\n                .then(r => {\r\n\r\n                    if (r.status !== 200) throw r;\r\n                    return r;\r\n                })\r\n                .then(r => r.json())\r\n                .then(r => {\r\n\r\n                    this.pokemons = r.pokemon.map(el => el.pokemon)\r\n\r\n                    this.count = r.pokemon.length\r\n\r\n                    return this.pokemons\r\n                }) :\r\n                promise = fetch(url, query) // Call the fetch function passing the url of the API as a parameter\r\n                .then(r => {\r\n                    if (r.status !== 200) throw r;\r\n                    return r;\r\n                })\r\n                .then(r => r.json())\r\n                .then(r => {\r\n\r\n                    //add to the end\r\n                    this.previous = r.previous\r\n                    this.next = r.next\r\n                    this.count = r.count\r\n                    this.pokemons = this.pokemons.concat(r.results)\r\n                    return this.pokemons\r\n                })\r\n            )\r\n            .then(() => this.busy = false)\r\n            .catch(e => {\r\n                this.busy = false;\r\n            })\r\n    }\r\n\r\n}\r\n","import React from 'react'\nimport {Match} from 'react-router'\nimport {Provider} from 'mobx-react'\nimport {observer, inject} from 'mobx-react';\nimport Main from \"./main\"\nimport Pokemons from './store/pokemons'\n\nconst pokemons = new Pokemons();\n\nclass App extends React.Component {\n    render() {\n\n        return (<Provider pokemons={pokemons}>\n            <Main/>\n        </Provider>)\n    }\n}\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}