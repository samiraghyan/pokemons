{"version":3,"sources":["components/pokemons/Search.jsx","components/pokemons/Pagination.jsx","components/pokemons/PokemonList.jsx","main.js","store/pokemons.js","App.js","index.js"],"names":["Search","inject","observer","changeType","ev","setType","_this","props","pokemons","currentTarget","value","onSearch","setHighlightPattern","_this$props$pokemons","this","types","category","highlightPattern","react_default","a","createElement","className","style","flex","flexWrap","flexDirection","onChange","defaultValue","width","map","el","key","url","name","type","placeholder","flexGrow","flexBasis","marginLeft","Component","Pagination","changeOnPage","setItemsOnPage","parseInt","onNext","preventDefault","nextPage","onBack","previousPage","offset","itemsOnPage","showNext","htmlFor","aria-label","onClick","href","PokemonList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","init","pokemonsOnPage","raws","forEach","val","assign","id","replace","split","pop","avatar","concat","console","log","addedStyle","length","toLowerCase","startsWith","opacity","push","height","verticalAlign","minHeight","umd_default","src","pokemons_Pagination","maxWidth","borderCollapse","textAlign","Main","margin","pokemons_Search","pokemons_PokemonList","ApiRoot","previous","next","getTypes","fetch","then","r","status","json","results","catch","error","getPockemons","_callee","q","query","_args","arguments","regenerator_default","wrap","_context","prev","undefined","abrupt","pokemon","count","e","stop","slice","observable","ObservableMap","computed","action","cat","_this2","populated","Promise","all","_this3","_callee2","_context2","_this4","t0","result","_this5","itemsNum","_this6","pattern","_this7","App","index_module","main","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.eb6605f6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n\r\n\r\n@inject('pokemons')\r\n@observer\r\n class Search extends Component {\r\n    changeType = (ev) => {\r\n    \tconst {  setType } = this.props.pokemons;\r\n    \tsetType( ev.currentTarget.value ) \r\n    }\r\n\r\n   \tonSearch = (ev) => {\r\n    \tconst {  setHighlightPattern } = this.props.pokemons;\r\n    \tsetHighlightPattern( ev.currentTarget.value ) \r\n    }\r\n\r\n    render() {\r\n    \tconst { types, category, highlightPattern } = this.props.pokemons;\r\n        return (\r\n             <div className=\"input-group\" style={{ flex: 1,  flexWrap: 'wrap', flexDirection: 'row' }}>\r\n\t\t\t      <select className=\"form-control\" onChange={this.changeType} defaultValue={category} style={ { flex: 1, width: 'auto'} }>\r\n\t\t\t\t\t  <option value=\"\">All</option>\r\n\t\t\t\t\t  { types.map( el => (\r\n\t\t\t\t\t  \t\t<option key={el.url} value={el.url} >{el.name}</option>\r\n\t\t\t\t\t  \t) )\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t  </select>\t\t\t\r\n\t\t\t\t  <input  type=\"text\" className=\"form-control\" placeholder=\"type a name to highlight pokemons\" onChange={this.onSearch} value={highlightPattern} style={ { flexGrow: 1, flexBasis: 'fill', flex: 1, width: 'auto' ,marginLeft: '10px'} } />\r\n\t\t\t      <span style={ { flex: 1} } >\r\n\t\t\t      </span>\r\n\t\t    </div>\r\n        );\r\n    }\r\n}\r\nexport default Search\r\n\r\n","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n\r\n\r\n@inject('pokemons') @observer\r\nclass Pagination extends Component {\r\n\r\n    changeOnPage = (ev) => {\r\n      const {  setItemsOnPage } = this.props.pokemons;\r\n      setItemsOnPage( parseInt( ev.currentTarget.value ) ) \r\n    }\r\n\r\n    onNext = (ev) => {\r\n      ev.preventDefault();\r\n      const {  nextPage } = this.props.pokemons;\r\n      nextPage( ) \r\n    }\r\n\r\n    onBack = (ev) => {\r\n      ev.preventDefault();\r\n      const {  previousPage } = this.props.pokemons;\r\n      previousPage(  ) \r\n    }\r\n\r\n    render() {\r\n        const {offset,  itemsOnPage,  showNext } = this.props.pokemons;\r\n\r\n        return (\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"onpage\">On page:</label>\r\n                <select htmlFor=\"id\" className=\"form-control\" name=\"onpage\" value={itemsOnPage} onChange={this.changeOnPage}>\r\n                  <option value=\"10\" >10</option>\r\n                  <option value=\"20\" >20</option>\r\n                  <option value=\"50\" >50</option>\r\n                </select>\r\n              </div>\r\n             \t<nav aria-label=\"...\">\r\n                    <ul className=\"pager\">\r\n                      { offset > 0 && \r\n                        <li className=\"previous\" onClick={null}><a  onClick={this.onBack} href=\"#\">Previous</a></li>\r\n                      }\r\n                      { showNext &&\r\n                        <li className=\"next\" onClick={null} ><a  onClick={this.onNext} href=\"#\">Next</a></li>\r\n                      }\r\n                    </ul>\r\n              </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Pagination\r\n\r\n","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Img                  from 'react-image'\r\nimport Pagination           from './Pagination';\r\n\r\n\r\n@inject('pokemons') @observer\r\n class PokemonList extends Component {\r\n    constructor(props){\r\n        super(props)\r\n       \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.pokemons.init()\r\n    }\r\n\r\n\r\n    render() {\r\n        const {pokemonsOnPage, highlightPattern} = this.props.pokemons ;\r\n\r\n        const raws = [];\r\n        (pokemonsOnPage).forEach((el, key) => {\r\n            const val = Object.assign({}, el)\r\n            const id = parseInt( val.url.replace(/\\/$/, '').split('/').pop()  )\r\n            val.id = id\r\n            val.avatar = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${ id }.png`;\r\n            console.log(\"val\",val)\r\n            const isNotSelected = !highlightPattern.length ||  val.name.toLowerCase().startsWith(highlightPattern);\r\n\r\n            const addedStyle = {}\r\n            if(!isNotSelected){\r\n                addedStyle.opacity = 0.1\r\n            }\r\n            raws.push( \r\n                <tr  key={val.name} style={ Object.assign( {height: '100px', verticalAlign: 'middle' }, addedStyle ) }>\r\n                    <td>\r\n                        {val.id}\r\n                    </td>\r\n                    <td style={{width:'100px', minHeight: '96px'}}>\r\n                        <Img src={val.avatar} style={{verticalAlign: 'middle', height: '96px'}}/>\r\n                    </td>\r\n                    <td>\r\n                     {val.name}\r\n                    </td>\r\n                    <td>\r\n                        {val.type}\r\n                    </td>\r\n                </tr>\r\n                )\r\n        }) \r\n        return (\r\n            <div style={{width:'100%'}}>\r\n                <Pagination/>\r\n                {raws.length > 0 \r\n\r\n                ?\r\n              \r\n                    <table style={{width:'100%', maxWidth:'560px', borderCollapse: 'collapse'}}>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>id</th>\r\n                            <th>Avatar</th>\r\n                            <th>Name</th>\r\n                            <th>Type</th>\r\n                        </tr>\r\n                          </thead>\r\n                         <tbody>\r\n                          { \r\n                            raws\r\n                          }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                :\r\n\r\n                    <h5 style={{textAlign:'center'}}>\r\n                        No pokemons to show\r\n                    </h5>\r\n                }\r\n                \r\n                <Pagination/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default  PokemonList","import {inject}             from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport Search               from './components/pokemons/Search';\r\nimport PokemonList          from './components/pokemons/PokemonList';\r\n\r\n@inject('pokemons')\r\nclass Main extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>All Pokemons</h1>\r\n                <section  className=\"main_container\">\r\n                    <div className=\"wrapper\" style={{maxWidth: '580px', margin: '0 auto'}}>\r\n                        <main className=\"main_content\">\r\n                            <Search/>\r\n                            <PokemonList/>\r\n                        </main>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Main\r\n","import { ObservableMap, observable, action, computed} from 'mobx';\r\nconst ApiRoot = `https://pokeapi.co/api/v2`\r\n\r\n\r\nexport default class Pokemons {\r\n\r\n    @observable highlightPattern = ''\r\n\r\n    @observable count = 0\r\n    previous = null\r\n    next = `${ApiRoot}/pokemon/`\r\n\r\n    @observable offset = 0\r\n    @observable itemsOnPage = 20\r\n\r\n    @observable pokemons = []\r\n\r\n    @observable pokemonsInfo = new ObservableMap()\r\n\r\n    @computed get showNext() {\r\n        return this.offset + this.itemsOnPage < this.count\r\n    }\r\n\r\n    @computed get pokemonsOnPage() {\r\n        if (this.offset > this.count) return []\r\n        return this.pokemons.slice(this.offset, this.offset + this.itemsOnPage);\r\n    }\r\n\r\n    @observable types = []\r\n    @observable category = null\r\n    @observable itemsOnPage = 20\r\n    @observable infoOpenedForId = 0\r\n\r\n    @action init = (cat) => {\r\n        if (this.populated) return;\r\n\r\n        this.category = cat\r\n        this.offset = 0;\r\n        this.next = null;\r\n        this.pokemons = []\r\n        this.count = 0;\r\n        Promise.all([this.getTypes(), this.getPockemons()]).then(() => this.populated = true)\r\n    }\r\n\r\n    @action setType = (cat) => {\r\n        this.category = cat\r\n        this.offset = 0;\r\n        this.next = null;\r\n        this.pokemons = []\r\n        this.count = 0;\r\n        this.getPockemons()\r\n    }\r\n\r\n\r\n\r\n    @action nextPage = async() => {\r\n        if (this.pokemons.length <= this.offset + this.itemsOnPage && this.next) {\r\n\r\n            try {\r\n                await this.getPockemons(this.next)\r\n            } catch (err) {\r\n\r\n            }\r\n        }\r\n        if (this.offset + this.itemsOnPage >= this.count) this.offset = this.count\r\n        else this.offset = this.offset + this.itemsOnPage\r\n    }\r\n\r\n    @action previousPage = () => {\r\n        const result = this.offset - this.itemsOnPage\r\n        this.offset = result > 0 ? result : 0\r\n    }\r\n\r\n    @action setItemsOnPage = (itemsNum) => this.itemsOnPage = itemsNum\r\n\r\n    @action setHighlightPattern = (pattern) => {\r\n\r\n        this.highlightPattern = pattern.toLowerCase()\r\n\r\n    }\r\n\r\n    getTypes = () => {\r\n        return fetch(`${ApiRoot}/type/`) // Call the fetch function passing the url of the API as a parameter\r\n            .then(r => {\r\n                if (r.status !== 200) throw r;\r\n                return r;\r\n            })\r\n            .then(r => r.json())\r\n            .then(r => {\r\n                if (!r.results) return;\r\n                this.types = r.results\r\n            })\r\n            .catch(r => {\r\n                console.error(r);\r\n            });\r\n    }\r\n\r\n    getPockemons = async(url = `${ApiRoot}/pokemon/`, q = null) => {\r\n        const query = q || {};\r\n        let promise = null;\r\n\r\n        return (this.category ? fetch(this.category) // Call the fetch function passing the url of the API as a parameter\r\n                \r\n                .then(r => {\r\n\r\n                    if (r.status !== 200) throw r;\r\n                    return r;\r\n                })\r\n                .then(r => r.json())\r\n                .then(r => {\r\n\r\n                    this.pokemons = r.pokemon.map(el => el.pokemon);\r\n\r\n                    this.count = r.pokemon.length\r\n                    return this.pokemons\r\n                }) :\r\n                promise = fetch(url, query) // Call the fetch function passing the url of the API as a parameter\r\n                .then(r => {\r\n                    if (r.status !== 200) throw r;\r\n                    return r;\r\n                })\r\n                .then(r => r.json())\r\n                .then(r => {\r\n                    this.previous = r.previous\r\n                    this.next = r.next\r\n                    this.count = r.count\r\n                    this.pokemons = this.pokemons.concat(r.results)\r\n                    return this.pokemons\r\n                })\r\n            )\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n\r\n}\r\n","import React            from 'react'\nimport {Provider}       from 'mobx-react'\nimport Main             from \"./main\"\nimport Pokemons         from './store/pokemons'\n\nconst pokemons = new Pokemons();\n\nclass App extends React.Component {\n    render() {\n        return <Provider pokemons={pokemons}>\n                     <Main/>\n                </Provider>\n    }\n}\n\n\nexport default App","import React        from 'react';\nimport ReactDOM     from 'react-dom';\nimport './index.css';\nimport App          from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}