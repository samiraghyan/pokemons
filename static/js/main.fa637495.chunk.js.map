{"version":3,"sources":["App.js","index.js"],"names":["TablePaginationActions","handleFirstPageButtonClick","event","_this","props","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","_this$props","this","classes","theme","react_default","a","createElement","className","root","IconButton_default","onClick","disabled","aria-label","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","React","Component","TablePaginationActionsWrapped","withStyles","flexShrink","color","palette","text","secondary","marginLeft","spacing","unit","withTheme","CustomPaginationActionsTable","state","rows","handleChangePage","_this2","setState","handleChangeRowsPerPage","target","value","_this3","fetch","then","res","json","response","results","console","log","_this$state","emptyRows","min","length","Paper_default","tableWrapper","Table_default","table","TableBody_default","slice","map","row","TableRow_default","key","id","TableCell_default","component","scope","name","align","type","style","height","colSpan","TableFooter_default","TablePagination_default","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","width","marginTop","minWidth","overflowX","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.fa637495.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nclass TablePaginationActions extends React.Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n        event,\n        Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n        <div className={classes.root}>\n          <IconButton\n              onClick={this.handleFirstPageButtonClick}\n              disabled={page === 0}\n              aria-label=\"First Page\"\n          >\n            {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n          </IconButton>\n          <IconButton\n              onClick={this.handleBackButtonClick}\n              disabled={page === 0}\n              aria-label=\"Previous Page\"\n          >\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n          </IconButton>\n          <IconButton\n              onClick={this.handleNextButtonClick}\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n              aria-label=\"Next Page\"\n          >\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </IconButton>\n          <IconButton\n              onClick={this.handleLastPageButtonClick}\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n              aria-label=\"Last Page\"\n          >\n            {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n          </IconButton>\n        </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n    TablePaginationActions,\n);\n\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass CustomPaginationActionsTable extends React.Component {\n  state = {\n    rows: [],\n    page: 0,\n    rowsPerPage: 5,\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ page: 0, rowsPerPage: event.target.value });\n  };\n  componentWillMount() {\n      fetch('http://pokeapi.co/api/v2/pokemon?limit=50').then(res=>res.json())\n          .then(response=>{\n              this.setState({\n                  rows : response.results,\n              });\n          });\n      console.log(\"rows\",this.state.rows)\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { rows, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <Paper className={classes.root}>\n          <div className={classes.tableWrapper}>\n            <Table className={classes.table}>\n              <TableBody>\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                    <TableRow key={row.id}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.id}</TableCell>\n                      <TableCell align=\"right\">{row.type}</TableCell>\n                    </TableRow>\n                ))}\n                {emptyRows > 0 && (\n                    <TableRow style={{ height: 48 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                )}\n              </TableBody>\n              <TableFooter>\n                <TableRow>\n                  <TablePagination\n                      rowsPerPageOptions={[10, 20, 50]}\n                      colSpan={3}\n                      count={rows.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      SelectProps={{\n                        native: true,\n                      }}\n                      onChangePage={this.handleChangePage}\n                      onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                      ActionsComponent={TablePaginationActionsWrapped}\n                  />\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </div>\n        </Paper>\n    );\n  }\n}\n\nCustomPaginationActionsTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomPaginationActionsTable);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CustomPaginationActionsTable from './App';\n\nReactDOM.render(<CustomPaginationActionsTable />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}