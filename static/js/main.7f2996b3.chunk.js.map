{"version":3,"sources":["components/pokemons/Search.jsx","components/pokemons/PokemonList.jsx","components/pokemons/Pagination.jsx","main.js","store/pokemons.js","App.js","index.js"],"names":["Search","inject","observer","changeType","ev","setType","_this","props","pokemons","currentTarget","value","onSearch","setHighlightPattern","_this$props$pokemons","this","types","category","highlightPattern","react_default","a","createElement","className","style","flex","flexWrap","flexDirection","onChange","defaultValue","width","map","el","key","url","name","type","placeholder","flexGrow","flexBasis","marginLeft","Component","columns","changeOnPage","setItemsOnPage","parseInt","onNext","preventDefault","nextPage","onBack","previousPage","offset","itemsOnPage","showNext","htmlFor","aria-label","onClick","href","id","label","minWidth","align","useStyles","makeStyles","root","tableWrapper","maxHeight","overflow","PokemonsList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","pokemonsArr","React","event","newPage","setPage","setRowsPerPage","target","page","rowsPerPage","react","Paper_default","classes","Table_default","stickyHeader","TableHead_default","TableRow_default","column","TableCell_default","TableBody_default","slice","row","hover","role","tabIndex","code","format","TablePagination_default","rowsPerPageOptions","component","count","length","backIconButtonProps","nextIconButtonProps","onChangePage","handleChangePage","onChangeRowsPerPage","handleChangeRowsPerPage","withStyle","Main","maxWidth","margin","pokemons_Search","PokemonList","ApiRoot","getTypes","_callee","regenerator_default","wrap","_context","prev","next","fetch","concat","sent","stop","getPockemons","_callee2","_args2","arguments","_context2","undefined","console","log","observable","ObservableMap","action","_this2","newPerPage","_this3","Promise","all","_this4","then","theme","createMuiTheme","palette","primary","main","secondary","typography","useNextVariants","overrides","MuiTable","App","index_module","MuiThemeProvider_default","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7f2996b3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n\r\n\r\n@inject('pokemons')\r\n@observer\r\n class Search extends Component {\r\n    changeType = (ev) => {\r\n    \tconst {  setType } = this.props.pokemons;\r\n    \tsetType( ev.currentTarget.value ) \r\n    }\r\n\r\n   \tonSearch = (ev) => {\r\n    \tconst {  setHighlightPattern } = this.props.pokemons;\r\n    \tsetHighlightPattern( ev.currentTarget.value ) \r\n    }\r\n\r\n    render() {\r\n    \tconst { types, category, highlightPattern } = this.props.pokemons;\r\n        return (\r\n             <div className=\"input-group\" style={{ flex: 1,  flexWrap: 'wrap', flexDirection: 'row' }}>\r\n\t\t\t      <select className=\"form-control\" onChange={this.changeType} defaultValue={category} style={ { flex: 1, width: 'auto'} }>\r\n\t\t\t\t\t  <option value=\"\">All</option>\r\n\t\t\t\t\t  { types.map( el => (\r\n\t\t\t\t\t  \t\t<option key={el.url} value={el.url} >{el.name}</option>\r\n\t\t\t\t\t  \t) )\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t  </select>\t\t\t\r\n\t\t\t\t  <input  type=\"text\" className=\"form-control\" placeholder=\"type a name to highlight pokemons\" onChange={this.onSearch} value={highlightPattern} style={ { flexGrow: 1, flexBasis: 'fill', flex: 1, width: 'auto' ,marginLeft: '10px'} } />\r\n\t\t\t      <span style={ { flex: 1} } >\r\n\t\t\t      </span>\r\n\t\t    </div>\r\n        );\r\n    }\r\n}\r\nexport default Search\r\n\r\n","import * as React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport withStyle from '@material-ui/core/styles/withStyles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {observer, inject} from 'mobx-react';\r\nimport Img from 'react-image'\r\nimport Pagination from './Pagination';\r\n//\r\n//\r\n// @inject('pokemons') @observer\r\n//  class PokemonList extends Component {\r\n//     constructor(props){\r\n//         super(props)\r\n//\r\n//     }\r\n//\r\n//     componentDidMount(){\r\n//         this.props.pokemons.init()\r\n//     }\r\n//\r\n//\r\n//     render() {\r\n//         const {pokemonsOnPage, highlightPattern} = this.props.pokemons ;\r\n//\r\n//         const raws = [];\r\n//         (pokemonsOnPage).forEach((el, key) => {\r\n//             const val = Object.assign({}, el)\r\n//             const id = parseInt( val.url.replace(/\\/$/, '').split('/').pop()  )\r\n//             val.id = id\r\n//             val.avatar = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${ id }.png`;\r\n//             console.log(\"val\",val)\r\n//             const isNotSelected = !highlightPattern.length ||  val.name.toLowerCase().startsWith(highlightPattern);\r\n//\r\n//             const addedStyle = {}\r\n//             if(!isNotSelected){\r\n//                 addedStyle.opacity = 0.1\r\n//             }\r\n//             raws.push(\r\n//                 <tr  key={val.name} style={ Object.assign( {height: '100px', verticalAlign: 'middle' }, addedStyle ) }>\r\n//                     <td>\r\n//                         {val.id}\r\n//                     </td>\r\n//                     <td style={{width:'100px', minHeight: '96px'}}>\r\n//                         <Img src={val.avatar} style={{verticalAlign: 'middle', height: '96px'}}/>\r\n//                     </td>\r\n//                     <td style={{textAlign:'center'}}>\r\n//                      {val.name}\r\n//                     </td>\r\n//                     <td>\r\n//                         {val.type}\r\n//                     </td>\r\n//                 </tr>\r\n//                 )\r\n//         })\r\n//         return (\r\n//             <div style={{width:'100%'}}>\r\n//                 <Pagination/>\r\n//                 {raws.length > 0\r\n//\r\n//                 ?\r\n//\r\n//                     <table style={{width:'100%', maxWidth:'560px', borderCollapse: 'collapse'}}>\r\n//                         <thead>\r\n//                         <tr>\r\n//                             <th>id</th>\r\n//                             <th>Avatar</th>\r\n//                             <th>Name</th>\r\n//                             <th>Type</th>\r\n//                         </tr>\r\n//                           </thead>\r\n//                          <tbody>\r\n//                           {\r\n//                             raws\r\n//                           }\r\n//                         </tbody>\r\n//                     </table>\r\n//\r\n//                 :\r\n//\r\n//                     <h5 style={{textAlign:'center'}}>\r\n//                         No pokemons to show\r\n//                     </h5>\r\n//                 }\r\n//\r\n//                 <Pagination/>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n// export default  PokemonList\r\n\r\nconst columns = [\r\n    {id: 'name', label: 'Name', minWidth: 200},\r\n    {id: 'avatar', label: 'Avatar', minWidth: 100},\r\n    {\r\n        id: 'type',\r\n        label: 'Type',\r\n        minWidth: 120,\r\n        align: 'right',\r\n    },\r\n    {\r\n        id: 'state',\r\n        label: 'State',\r\n        minWidth: 120,\r\n        align: 'right',\r\n    }\r\n];\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    tableWrapper: {\r\n        maxHeight: 407,\r\n        overflow: 'auto',\r\n    },\r\n});\r\n\r\n@inject('pokemons') @observer\r\nclass PokemonsList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n\r\n    pokemonsArr;\r\n\r\n    componentDidMount() {\r\n        this.pokemonsArr = React.useState(this.props.pokemons)\r\n    }\r\n\r\n    handleChangePage(event, newPage) {\r\n        this.props.pokemons.setPage(newPage);\r\n    }\r\n\r\n    handleChangeRowsPerPage(event) {\r\n        this.props.pokemons.setRowsPerPage(+event.target.value);\r\n        this.props.pokemons.setPage(0);\r\n    }\r\n\r\n    render() {\r\n        const {page, rowsPerPage} = this.props.pokemons;\r\n        return <Paper className={this.props.classes.root}>\r\n            <div className={this.props.classes.tableWrapper}>\r\n                <Table stickyHeader>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map(column => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{minWidth: column.minWidth}}\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.pokemonsArr.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\r\n                            return (\r\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                    {columns.map(column => {\r\n                                        const value = row[column.id];\r\n                                        return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                                {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                            </TableCell>\r\n                                        );\r\n                                    })}\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 20, 50]}\r\n                component=\"div\"\r\n                count={this.pokemonsArr.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                backIconButtonProps={{\r\n                    'aria-label': 'previous page',\r\n                }}\r\n                nextIconButtonProps={{\r\n                    'aria-label': 'next page',\r\n                }}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n            />\r\n        </Paper>;\r\n    };\r\n}\r\n\r\nexport default withStyle(useStyles)(PokemonsList);\r\n","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n\r\n\r\n@inject('pokemons') @observer\r\nclass Pagination extends Component {\r\n\r\n    changeOnPage = (ev) => {\r\n      const {  setItemsOnPage } = this.props.pokemons;\r\n      setItemsOnPage( parseInt( ev.currentTarget.value ) ) \r\n    }\r\n\r\n    onNext = (ev) => {\r\n      ev.preventDefault();\r\n      const {  nextPage } = this.props.pokemons;\r\n      nextPage( ) \r\n    }\r\n\r\n    onBack = (ev) => {\r\n      ev.preventDefault();\r\n      const {  previousPage } = this.props.pokemons;\r\n      previousPage(  ) \r\n    }\r\n\r\n    render() {\r\n        const {offset,  itemsOnPage,  showNext } = this.props.pokemons;\r\n\r\n        return (\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"onpage\">On page:</label>\r\n                <select htmlFor=\"id\" className=\"form-control\" name=\"onpage\" value={itemsOnPage} onChange={this.changeOnPage}>\r\n                  <option value=\"10\" >10</option>\r\n                  <option value=\"20\" >20</option>\r\n                  <option value=\"50\" >50</option>\r\n                </select>\r\n              </div>\r\n             \t<nav aria-label=\"...\">\r\n                    <ul className=\"pager\">\r\n                      { offset > 0 && \r\n                        <li className=\"previous\" onClick={null}><a  onClick={this.onBack} href=\"#\">Previous</a></li>\r\n                      }\r\n                      { showNext &&\r\n                        <li className=\"next\" onClick={null} ><a  onClick={this.onNext} href=\"#\">Next</a></li>\r\n                      }\r\n                    </ul>\r\n              </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Pagination\r\n\r\n","import {inject}             from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport Search               from './components/pokemons/Search';\r\nimport PokemonList          from './components/pokemons/PokemonList';\r\n\r\n@inject('pokemons')\r\nclass Main extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>All Pokemons</h1>\r\n                <section  className=\"main_container\">\r\n                    <div className=\"wrapper\" style={{maxWidth: '580px', margin: '0 auto'}}>\r\n                        <main className=\"main_content\">\r\n                            <Search/>\r\n                            <PokemonList/>\r\n                        </main>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Main\r\n","import { ObservableMap, observable, action, computed} from 'mobx';\r\nconst ApiRoot = `https://pokeapi.co/api/v2`\r\n\r\n\r\nexport default class Pokemons {\r\n\r\n    @observable page = 0;\r\n    @observable rowsPerPage = 10;\r\n    @observable pokemons = [];\r\n    @observable types = []\r\n    @observable pokemonsInfo = new ObservableMap()\r\n    @action setPage = (newPage) => {\r\n        this.page = newPage;\r\n    };\r\n    @action setPage = (newPerPage) => {\r\n        this.rowsPerPage = newPerPage;\r\n    };\r\n    @action init = () => {\r\n        Promise.all([this.getTypes(), this.getPockemons()]).then(() => {})\r\n    };\r\n\r\n    getTypes = async () => {\r\n        this.types = await fetch(`${ApiRoot}/type/`);\r\n    };\r\n\r\n    getPockemons = async(url = `${ApiRoot}/pokemon/`) => {\r\n        this.pokemons = await fetch(url);\r\n        console.log(this.pokemons);\r\n    }\r\n\r\n}\r\n","import React from 'react'\nimport {Provider} from 'mobx-react'\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport Main from \"./main\"\nimport Pokemons from './store/pokemons'\n\nconst pokemons = new Pokemons();\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n        primary: {\n            main: \"#3949ab\",\n        },\n        secondary: {\n            main: \"#d81b60\",\n        }\n    },\n    typography: {\n        useNextVariants: true,\n    },\n    overrides: {\n        MuiTable: {}\n    }\n});\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Provider pokemons={pokemons}>\n                <MuiThemeProvider theme={theme}>\n                    <Main/>\n                </MuiThemeProvider>\n            </Provider>\n        )\n    }\n}\n\n\nexport default App","import React        from 'react';\nimport ReactDOM     from 'react-dom';\nimport './index.css';\nimport App          from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}